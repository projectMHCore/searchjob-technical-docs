        ІПЗ             Testing Documentation




                        ЛАБОРАТОРНА РОБОТА V




каф. ЕОМ, ХНУРЕ, 2025
ІПЗ General                                                                            V


       ■   Мета роботи
           Формування тестової документації для перевірки якості програмного засобу.


       ■   Теми та техніки що використовуються
       ■   тестування програмного забезпечення та його види
       ■   види тестової документації
       ■   формування документів виду Test-Case та Checklist
       ■   техніки тест-дизайну
       ■   використання технік State Transition Testing та Use-Case Testing




2025   каф. ЕОМ, ХНУРЕ                                                                 1
ІПЗ Testing Documentation / Test-Case                                                    V


       ■   Test-Case - структурований набір вхідних даних, умов виконання і очікуваних
           результатів, який розроблений для перевірки тієї чи іншої властивості або
           поведінки програмного засобу. Представляє собою документ, оформлений
           у відповідності з прийнятими в організації стандартами та вимогами


       ■   Особливості
           ■    Високий рівень деталізації

           ■    Спосіб оформлення визначається стандартами прийнятими в організації

           ■    Використання тест-кейсів призводить до збільшення кількості часу
                на оформлення та обслуговування документа


2025   каф. ЕОМ, ХНУРЕ                                                                   2
ІПЗ Testing Documentation / Test-Case States                                        V

                    Створений /
                       New

                                          Запланований /           Не виконаний /
                                              Ready                  Not Tested



                                            Виконується /          Пропущений /
                                             In Progress             Skipped



                          Провалений /   Успішно пройдений /       Заблокований /
                             Failed            Passed                 Blocked



                                                      Закритий /
                                                       Closed

2025   каф. ЕОМ, ХНУРЕ                                                              3
ІПЗ Testing Documentation / Test-Case States                                           V


       ■   Створений / new – початковий стан будь-якого документа,
           призначається автоматично

       ■   Запланований / ready – переходить при включенні тест-кейсу в ітерацію

       ■   Не виконаний / not tested, NT - альтернатива стану "запланований".
           Цей стан означає готовність до виконання, але виконання ще не відбувалося

       ■   Виконується / in progress – використовується якщо виконання тест-кейсу
           вимагає тривалого часу, при швидкому виконанні – стан не використовується

       ■   Пропущений / skipped – якщо виконання тест-кейсу в ітерації скасовується


2025   каф. ЕОМ, ХНУРЕ                                                                 4
ІПЗ Testing Documentation / Test-Case States                                         V


       ■   Успішно пройдений / passed - означає, що в процесі виконання тест-кейсу
           не було знайдено дефектів

       ■   Провалений / failed - означає, що в процесі виконання тест-кейсу було
           виявлено дефект

       ■   Заблокований / blocked - якщо з якоїсь причини виконання тест-кейсу
           неможливе - відбувається якщо при тестуванні було виявлено дефект,
           наявність якого не дозволяє проводити подальше тестування, у тому числі
           і виконання цього тесту-кейсу

       ■   Потребує доопрацювання / not ready - у цьому стані тест-кейс може бути
           перекладений у будь-який час, якщо в ньому виявляються помилки, або
           функція, що перевіряється тест-кейсом, видалена з проекту


2025   каф. ЕОМ, ХНУРЕ                                                               5
ІПЗ Testing Documentation / Test-Case Attributes                                           V


       ■   ID - ідентифікатор або назва документа

       ■   Priority - показує важливість тест-кейсу

       ■   Requirement - посилання на вимогу, що покривається тест-кейсом

       ■   Module / Component - ідентифікатор частини функціональності проекту,
           яка покривається цим тест-кейсом

       ■   Title - назва та суть тест-кейсу, що використовується для спрощення розуміння
           основної ідеї / мети тест-кейсу без вивчення всіх його атрибутів

       ■   Preconditions – вихідні дані / дії, які необхідно зробити перед тим,
           як виконати цей тест-кейс


2025   каф. ЕОМ, ХНУРЕ                                                                     6
ІПЗ Testing Documentation / Test-Case Attributes                                   V


       ■   Steps - докладно описана послідовність дій, яку необхідно реалізувати
           під час виконання даного тест-кейсу

       ■   Expected Result - очікуваний результат кожного кроку тест-кейсу

       ■   Postconditions - описується опціонально, надає набір дій, спрямованих
           на приведення об’єкта тестування у початковий стан, який був
           на початку тестування




2025   каф. ЕОМ, ХНУРЕ                                                             7
ІПЗ Testing Documentation / Test-Case Template   V


       ■   Шаблон Test-Case




2025   каф. ЕОМ, ХНУРЕ                           8
ІПЗ Testing Documentation / Checklist                                                         V


       ■   Checklist - представляє набір ідей / тестів / тест-кейсів, який використовується
           для перевірки певної специфічної функціональності




       ■   Особливості
       ■   Менший рівень деталізації, ніж у тест-кейсі

       ■   Спосіб оформлення визначається прийнятими в організації стандартами
           документації
       ■   Використання чек-листів призводить до скорочення кількості часу
           на оформлення та обслуговування документа


2025   каф. ЕОМ, ХНУРЕ                                                                        9
ІПЗ Testing Documentation / Checklist Attributes                                      V

       ■   ID - ідентифікатор або назва документа

       ■   Component - ідентифікатор частини функціональності для перевірки, якою
           використовується один або кілька тестів у чек-листі

       ■   Summary - короткий опис і посилання на функціональність, що тестується

       ■   Steps - кроки чек-листу з детальним описом входів / Опціонально

       ■   Progress - поточний стан чек-листа внаслідок проведення перевірок
           та відсоток виникнення помилок

       ■   Bugs - посилання на баг-репорти, знайдені у процесі проведення перевірок

       ■   Expected - результат, який очікується на перевірці

2025   каф. ЕОМ, ХНУРЕ                                                                10
ІПЗ Testing Documentation / Checklist Template   V


       ■   Шаблон Checklist




2025   каф. ЕОМ, ХНУРЕ                           11
ІПЗ Test-Design Techniques / Equivalent Classes                                            V

       ■   Еквівалентний клас - включає безліч значень, використання яких буде
           приводити до одного і того ж результату. Тому при тестуванні не потрібно
           перебирати всі значення з усіх еквівалентних класів - достатньо взяти лише
           за одним значенням із кожного класу

       ■   Техніка аналізу еквівалентних класів
           Полягає у розділенні всього діапазону допустимих вхідних значень на групи,
           в кожній з яких значення еквівалентні між собою за результатом впливу
           на систему / об’єкт тестування

       ■   Еквівалентні тести
       ■   Перевіряють одну і ту ж функціональність / модуль / частина системи
       ■   Якщо один із тестів визначає помилку, то й інший, ймовірно, теж її визначає
       ■   Якщо один із тестів пропускає помилку, то й інший, ймовірно, теж її пропускає

2025   каф. ЕОМ, ХНУРЕ                                                                     12
ІПЗ Test-Design Techniques / Equivalent Classes                                       V

       ■   Особливості техніки
       ■   Скорочує кількість тестів при збереженні прийнятного тестового покриття

       ■   Неприпустимі значення можуть бути об’єднані у класи

       ■   Значення з еквівалентних класів використовуються переважно для перевірки
           позитивних сценаріїв тестування

       ■   Занадто велика кількість еквівалентних класів збільшує ймовірність
           формування надлишкових тестів

       ■   Занадто мале число еквівалентних класів збільшує ймовірність того,
           що можливі помилки будуть пропущені



2025   каф. ЕОМ, ХНУРЕ                                                                13
ІПЗ Test-Design Techniques / Equivalent Classes                                        V


       ■   Етапи використання техніки
       ■   Визначення класів еквівалентності - для кожного тесту з виділених класів
           очікується отримання однакового результату

       ■   Виділення представника від кожного класу - з кожного класу еквівалентного
           набору тестів формується один тест

       ■   Виконання тестів від кожного класу еквівалентності




2025   каф. ЕОМ, ХНУРЕ                                                                 14
ІПЗ Test-Design Techniques / Boundary Values                                                    V

       ■   Аналіз значень на кордонах - спрямований на перевірку поведінки системи
           на граничних значеннях вхідних даних (чи межах еквівалентних класів). Головна ідея
           техніки – програмне забезпечення може некоректно працювати
           у сфері граничних значень.

       ■   Особливості
       ■   Техніка рідко використовується сама по собі
       ■   Передбачає роботу з явно вказаними діапазонами допустимих значень
           об’єкт тестування
       ■   Зазвичай велика кількість проблем (дефектів) виникає на кордонах
           допустимих значень вхідних змінних
       ■   Техніка фокусує увагу на перевірці меж та значень біля меж допустимих
           значень об’єкта тестування


2025   каф. ЕОМ, ХНУРЕ                                                                          15
ІПЗ Test-Design Techniques / Boundary Values                                         V


       ■   Етапи використання техніки
       ■   Визначення граничних значень для представленого діапазону всіх можливих
           станів об'єкту тестування

       ■   Виділення меж на представленому діапазоні значень

       ■   Формування тестових наборів значень: до кордону, на кордоні, відразу
           після кордону

       ■   Проведення тестування зі сформованих тестів




2025   каф. ЕОМ, ХНУРЕ                                                               16
ІПЗ Test-Design Techniques / State Transition Testing                                         V

       ■   Тестування на основі таблиці переходів - метод тестування “чорної
           скриньки”, який використовується там, де певний аспект системи може бути
           описаний у вигляді деякого кінцевого автомата станів (зв'язного графа) або блок-
           схеми. Це означає, що система, що тестується, в кожен конкретний момент часу
           знаходиться в одному з виділених станів, а переходи з одного стану в інший
           визначаються відповідно до того, як це зазначено в графі / автоматі станів



                                                T- = N 2 - T +
               -
              T - кількість негативних тестів
              N - кількість станів об’єкту тестування
               +
              T - кількість позитивних тестів

2025   каф. ЕОМ, ХНУРЕ                                                                        17
ІПЗ Test-Design Techniques / State Transition Testing                V


       ■   Етапи використання техніки
       ■   Формування діаграми / графа станів

       ■   Формування таблиці (матриці) переходів

       ■   Визначення кількості позитивних та негативних сценаріїв

       ■   Формування тестових сценаріїв

       ■   Проведення тестування зі сформованих тестів




2025   каф. ЕОМ, ХНУРЕ                                               18
ІПЗ Test-Design Techniques / Use-Case Testing                                               V


       ■   Use-Case - перелік дій, сценарій за яким користувач працює з додатком для
           виконання будь-якої дії в системі або досягнення конкретної мети

       ■   Тестування за допомогою Use-Cases - проводиться для виявлення
           логічних проблем у вимогах / функціоналі, які складно знайти при модульному
           чи інтеграційному тестуванні. Для зручності роботи use-case часто оформляється
           у вигляді діаграми з переходами

       ■   Use-Cases
       ■   ПОТРІБНІ коли необхідно підвищити якість та повноту вимог
       ■   НЕ ПОТРІБНІ коли потрібно описати складний алгоритм (більше 20-25 розгалужень)




2025   каф. ЕОМ, ХНУРЕ                                                                      19
ІПЗ Test-Design Techniques / Use-Case Testing                           V


       ■   Структура Use-Case
       ■   Мета, яка досягається в процесі виконання use-case
       ■   Актори (дійові особи)
       ■   Передумови до виконання сценарію
       ■   Обмеження системи
       ■   Основний сценарій використання системи для досягнення мети
       ■   Розширення (альтернативні сценарії)


           При створенні Use-Case важливо максимально спростити схему
           задля підвищення зручності її візуального сприйняття


2025   каф. ЕОМ, ХНУРЕ                                                  20
ІПЗ Test-Design Techniques / Use-Case Testing                                       V


       ■   Етапи використання техніки
       ■   Вичитування та аналіз вимог, визначення основних цілей, акторів та дій

       ■   Створення формального опису процесів та блок-схеми/графа станів

       ■   Виділення основного сценарію та розширень

       ■   Формування тестових сценаріїв

       ■   Проведення тестування зі сформованих тестів




2025   каф. ЕОМ, ХНУРЕ                                                              21
ІПЗ Requirements                                                                           V


       ■   Технічне завдання
       ■   Розробити деталізований Checklist для тестування проекту, обраного на ЛБ 1,
           та опрацьованого впродовж наступних лабораторних робіт
       ■   Сформований Checklist повинен мати 30+ перевірок функціональності додатку
           та бути оформлений на основі наведеного шаблону
       ■   Для тестування модуля авторизації та реєстрації користувачів програмного
           засобу необхідно використати або State Transition Testing Technique або
           Use-Case Testing Technique. Діаграма та таблиці, отримані за допомогою однієї
           з цих технік необхідно додати до звіту з лабораторної роботи
       ■   Для тестування перевірки паролю, введеного користувачем під час спроби
           реєстрації нового акаунту необхідно створити окремий Test-Case та оформити
           його відповідно до наданого шаблону


2025   каф. ЕОМ, ХНУРЕ                                                                     22
ІПЗ Report                                                                                   V


       ■    Звіт повинен мати
       ■    мова звіту має бути українською
        ■   титульна сторінка з назвою лабораторної роботи та інформацією
            про команду виконавців
        ■   мета лабораторної роботи
        ■   Checklist для тестування програмного засобу
        ■   Діаграма і таблиця та перевірки модуля авторизації та реєстрації користувачів,
            отримані за допомогою State Transition Testing або Use-Case Testing
        ■   Test-Case для перевірки пароля користувача під час спроби реєстрації
            нового акаунту у програмному засобі
        ■   висновки
       Кількість балів за ЛБ: 1 - 5

2025    каф. ЕОМ, ХНУРЕ                                                                      23
ІПЗ Questions                                                      V


       ■   Контрольні запитання
       ■   Що таке тестування програмного забезпечення?
       ■   Що розуміють під терміном функціонального тестування?
       ■   Наведіть види нефункціонального тестування?
       ■   Що таке регресійне тестування?
       ■   Наведіть основні види тестової документації?
       ■   Що таке Test-Case?
       ■   Чим Checklist відрізняється від Test-Case?
       ■   Що таке User Story?


2025   каф. ЕОМ, ХНУРЕ                                             24
ІПЗ Questions                                                                    V


       ■   Контрольні запитання
       ■   Що таке Bug-Report, які основні атрибути він має?
       ■   Для кого створюється Bug-Report?
       ■   У чому різниця між Priority та Severity у Bug-Report?
       ■   Які техніки тест-дизайну ви знаєте?
       ■   У чому різниця між техніками Equivalent Classes та Boundary Values?
       ■   У чому особливості техніка State Transition Testing?
       ■   У чому особливості техніки Use-Case Testing?



2025   каф. ЕОМ, ХНУРЕ                                                           25
ІПЗ




                         Дякую за увагу!
                           Питання?


2025   каф. ЕОМ, ХНУРЕ
